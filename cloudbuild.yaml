# Cloud Build configuration for deploying the V-Ken Serve application to Cloud Run.

steps:
  # Step 1: Build the container image using the Dockerfile.
  # This packages the entire full-stack application.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
      - '.'

  # Step 2: Push the built image to Google Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'

  # Step 3: Deploy the new image to Cloud Run.
  # This step makes the service live and connects it to the database and secrets.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Makes the service publicly accessible.
      - '--add-cloudsql-instances'
      - '${_INSTANCE_CONNECTION_NAME}'
      - '--set-secrets=DATABASE_URL=DATABASE_URL:latest,API_KEY=API_KEY:latest,JWT_SECRET=JWT_SECRET:latest,VAPID_PUBLIC_KEY=VAPID_PUBLIC_KEY:latest,VAPID_PRIVATE_KEY=VAPID_PRIVATE_KEY:latest'

# Store the final image URI in the build details.
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE_NAME}:$COMMIT_SHA'

# Default substitution variables. These can be overridden by the trigger settings.
substitutions:
  _SERVICE_NAME: 'vken-serve'
  _REGION: 'us-central1'
  _REPOSITORY: 'vken-serve-repo'
  _IMAGE_NAME: 'vken-serve-app'
  # IMPORTANT: _INSTANCE_CONNECTION_NAME must be set in your Cloud Build trigger.
  _INSTANCE_CONNECTION_NAME: 'your-gcp-project:your-region:your-instance-name'

# Grant Cloud Build permission to access secrets from Secret Manager during the build.
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
      env: 'DATABASE_URL'
    - versionName: projects/$PROJECT_ID/secrets/API_KEY/versions/latest
      env: 'API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/JWT_SECRET/versions/latest
      env: 'JWT_SECRET'
    - versionName: projects/$PROJECT_ID/secrets/VAPID_PUBLIC_KEY/versions/latest
      env: 'VAPID_PUBLIC_KEY'
    - versionName: projects/$PROJECT_ID/secrets/VAPID_PRIVATE_KEY/versions/latest
      env: 'VAPID_PRIVATE_KEY'

# Specify build options.
# This logging option creates a regional bucket for logs automatically, resolving common permission errors.
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET